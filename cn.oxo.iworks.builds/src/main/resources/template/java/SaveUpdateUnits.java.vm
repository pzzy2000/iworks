package  ${BuildDaoBean.basePath}.service.units;

import java.util.List;

import org.springframework.stereotype.Component ;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;

import ${BuildDaoBean.clazz.getName()};
import cn.oxo.iworks.databases.ABBaseUnits;
import cn.oxo.iworks.databases.SQLUilts.OptType;
import cn.oxo.iworks.databases.SystemOptServiceException;
import cn.oxo.iworks.databases.SysOptError;
import ${BuildDaoBean.basePath}.service.mybatis.${BuildDaoBean.toBean()}BaseMapper;
import ${BuildDaoBean.basePath}.bean.search.${BuildDaoBean.toBean()}SearchBean;


@Component("${BuildDaoBean.toBean()}SaveUpdateRemoveUnits")
public class ${BuildDaoBean.toBean()}SaveUpdateRemoveUnits extends ABBaseUnits {

@Autowired
private ${BuildDaoBean.toBean()}BaseMapper  i${BuildDaoBean.toBean()}BaseMapper;




    public ${BuildDaoBean.className} saveUpdate(OptType optType, ${BuildDaoBean.className} opt${BuildDaoBean.className}) throws SystemOptServiceException {

        switch (optType) {
		
		 case init:
		  return   init(opt${BuildDaoBean.className}) ;
        case save:
            return   save(opt${BuildDaoBean.className}) ;
           
        case update:
            return update(opt${BuildDaoBean.className}) ;
        

        default:
            throw new SystemOptServiceException(SysOptError.SysError.getCode(),SysOptError.SysError.getName()+"[操作类型错误]") ;
        }
    }
	
	 public ${BuildDaoBean.className}  init(${BuildDaoBean.className} opt${BuildDaoBean.className}) throws SystemOptServiceException {
             throw new SystemOptServiceException(SysOptError.SysError.getCode(),SysOptError.SysError.getName()+"[操作没实现]") ;
    }

    public ${BuildDaoBean.className}  save(${BuildDaoBean.className} opt${BuildDaoBean.className}) throws SystemOptServiceException {
    
             opt${BuildDaoBean.className}.setId(createIdFactory.createDBId());

            int r = i${BuildDaoBean.toBean()}BaseMapper.insertSelective(opt${BuildDaoBean.className});
            
            if(r==0)throw new SystemOptServiceException(SysOptError.SysError.getCode(),SysOptError.SysError.getName()+"[插入数据错误]");
            
            return opt${BuildDaoBean.className};
    }

    public ${BuildDaoBean.className}  update(${BuildDaoBean.className} opt${BuildDaoBean.className}) throws SystemOptServiceException {

          int r =  i${BuildDaoBean.toBean()}BaseMapper.updateByPrimaryKeySelective(opt${BuildDaoBean.className});
           
             if(r==0)throw new SystemOptServiceException(SysOptError.SysError.getCode(),SysOptError.SysError.getName()+"[更新数据错误]");
           
           return get(opt${BuildDaoBean.className}.getId());
    }
    
     public ${BuildDaoBean.className}  get(Long id) throws SystemOptServiceException {

        return  i${BuildDaoBean.toBean()}BaseMapper.selectByPrimaryKey(id);
     
   }
    
     public ${BuildDaoBean.className}  remove(OptType optType, ${BuildDaoBean.toBean()}SearchBean  searchBean  ) throws SystemOptServiceException {
         
         ${BuildDaoBean.className}   remove${BuildDaoBean.className} =get(searchBean.getId());
         
         throw new SystemOptServiceException(SysOptError.SysError.getCode(),SysOptError.SysError.getName()+"[操作没实现]");
    }
    
     public List<${BuildDaoBean.className}>  removes(OptType optType, ${BuildDaoBean.toBean()}SearchBean  searchBean  ) throws SystemOptServiceException {
         
         
         throw new SystemOptServiceException(SysOptError.SysError.getCode(),SysOptError.SysError.getName()+"[操作没实现]");
    }

}
