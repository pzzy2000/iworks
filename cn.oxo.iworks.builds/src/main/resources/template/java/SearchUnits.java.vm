package  ${BuildDaoBean.basePath}.service.units;

import java.util.List ;
import org.apache.commons.lang3.StringUtils;

import org.springframework.stereotype.Component ;
import org.springframework.beans.factory.annotation.Autowired;

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import ${BuildDaoBean.clazz.getName()};

import ${BuildDaoBean.basePath}.pojo.bean.${BuildDaoBean.className}SearchBean;
import ${BuildDaoBean.basePath}.service.mybatis.${BuildDaoBean.className}BaseMapper;
import cn.oxo.iworks.databases.ABBaseUnits;
import cn.oxo.iworks.databases.CommSearchBean;
import cn.oxo.iworks.databases.SQLUilts.OptType;
import cn.oxo.iworks.databases.SysOptError;
import cn.oxo.iworks.databases.SystemOptServiceException;
import cn.oxo.iworks.databases.SelectPage;

@Component("${BuildDaoBean.className}SearchUnits")
public class ${BuildDaoBean.className}SearchUnits  extends ABBaseUnits {

@Autowired
private ${BuildDaoBean.className}BaseMapper  i${BuildDaoBean.className}BaseMapper;

   @SuppressWarnings("deprecation")
	private Page<${BuildDaoBean.className}>  createPage(OptType optType,
		                            ${BuildDaoBean.className}SearchBean searchBean,CommSearchBean commSearchBean){
		if(commSearchBean ==null){
		return null;
		}else{
		Page<${BuildDaoBean.className}> page = new Page<${BuildDaoBean.className}>(
					commSearchBean.getPageNum() == null ? 1 : commSearchBean.getPageNum(),
					commSearchBean.getPageSize() == null ? 10 : commSearchBean.getPageSize());
		if(StringUtils.isNotEmpty(commSearchBean.getDir())) {
			String sort =StringUtils.isNotEmpty(commSearchBean.getSort())?"desc":commSearchBean.getSort();
			switch (sort.toLowerCase()) {
			case "asc":
				page.setAsc(commSearchBean.getDir());
				break;
			case "desc":
				page.setDesc(commSearchBean.getDir());
				break;
			default:
				break;
			}
		}
		return page;
		}
	}

    public SelectPage<${BuildDaoBean.className}> search(OptType optType,
		                            ${BuildDaoBean.className}SearchBean searchBean,CommSearchBean commSearchBean) throws SystemOptServiceException {
       
        Page<${BuildDaoBean.className}> page =createPage(optType, searchBean, commSearchBean);
		 List<${BuildDaoBean.className}> result= list(page, searchBean, commSearchBean);
		 SelectPage<${BuildDaoBean.className}> selectPage = new SelectPage<${BuildDaoBean.className}>();
		if (page == null) {
			selectPage.setTotal((long) result.size());
			selectPage.setSize(result.size());
			selectPage.setCurrent(result.size());
			selectPage.setRecords(result);
		} else {
			selectPage.setTotal(page.getTotal());
			selectPage.setSize(page.getSize());
			selectPage.setCurrent(page.getCurrent());
			selectPage.setRecords(result);
		}
		
		return selectPage;

    }
	
	
	    public List<${BuildDaoBean.className}> list(OptType optType,
		                            ${BuildDaoBean.className}SearchBean searchBean,CommSearchBean commSearchBean) throws SystemOptServiceException {
       
        Page<${BuildDaoBean.className}> page =createPage(optType, searchBean, commSearchBean);
        if(page ==null){
        return i${BuildDaoBean.className}BaseMapper.search${BuildDaoBean.className}Selective(searchBean,commSearchBean);
        }else{
        List<${BuildDaoBean.className}> result = list(page,searchBean, commSearchBean);

		return result;
        }
        

    }
	
    private List<${BuildDaoBean.className}> list(Page<${BuildDaoBean.className}> page ,${BuildDaoBean.className}SearchBean searchBean, CommSearchBean commSearchBean) throws SystemOptServiceException {

		return i${BuildDaoBean.className}BaseMapper.search${BuildDaoBean.className}Selective(page,searchBean,commSearchBean);

	}
	
	
	

    public ${BuildDaoBean.className} searchSingle(OptType optType, ${BuildDaoBean.className}SearchBean searchBean) throws SystemOptServiceException {
        CommSearchBean commSearchBean = new CommSearchBean();
		commSearchBean.setPageNum(1);
		commSearchBean.setPageSize(1);
		Page<${BuildDaoBean.className}> page =createPage(optType, searchBean, commSearchBean);
		List<${BuildDaoBean.className}>  result = list(page, searchBean,commSearchBean);
		if(result.size()>1)throw new SystemOptServiceException(SysOptError.SysError.getCode(),SysOptError.SysError.getName()+"[查询结果大于1个]");
	    return result.size() ==0 ? null:result.get(0);
				
	}
	

}
